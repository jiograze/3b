apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "otuken3d.fullname" . }}
  labels:
    {{- include "otuken3d.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.app.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "otuken3d.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "otuken3d.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "otuken3d.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.app.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.app.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          env:
            - name: ENVIRONMENT
              value: {{ .Values.global.environment }}
            - name: REDIS_HOST
              value: {{ include "otuken3d.redis.fullname" . }}
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "otuken3d.redis.secretName" . }}
                  key: redis-password
            - name: POSTGRES_HOST
              value: {{ include "otuken3d.postgresql.fullname" . }}
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "otuken3d.postgresql.secretName" . }}
                  key: postgres-password
            - name: S3_BUCKET
              value: {{ .Values.storage.s3.bucket }}
            - name: S3_REGION
              value: {{ .Values.storage.s3.region }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "otuken3d.s3.secretName" . }}
                  key: access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "otuken3d.s3.secretName" . }}
                  key: secret-key
            {{- if .Values.storage.s3.endpoint }}
            - name: S3_ENDPOINT
              value: {{ .Values.storage.s3.endpoint }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          {{- if .Values.app.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.app.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.app.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.app.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.app.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.app.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: {{ .Values.app.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.app.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.app.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.app.readinessProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          volumeMounts:
            - name: models
              mountPath: /app/models
            - name: data
              mountPath: /app/data
            - name: cache
              mountPath: /app/cache
            - name: config
              mountPath: /app/config
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: models
          persistentVolumeClaim:
            claimName: {{ include "otuken3d.fullname" . }}-models
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "otuken3d.fullname" . }}-data
        - name: cache
          persistentVolumeClaim:
            claimName: {{ include "otuken3d.fullname" . }}-cache
        - name: config
          configMap:
            name: {{ include "otuken3d.fullname" . }}
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 